{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["class Trie {\n\troot = null;\n\tconstructor() {\n\t\tthis.root = Object.create(null);\n\t}\n\tinsert(word) {\n\t\tlet node = this.root;\n\t\tfor (let c of word) {\n\t\t\t// 没有对象创建对象\n\t\t\tif (!node[c]) node[c] = Object.create(null);\n\t\t\t// 有对象直接替换\n\t\t\tnode = node[c];\n\t\t}\n\t\t// 处理特殊字符\n\t\tif (!('$' in node)) node['$'] = 0;\n\t\tnode['$']++;\n\t}\n\tmost() {\n\t\tlet max = 0;\n\t\tlet word = null;\n\t\tlet visit = (node, word) => {\n\t\t\tif (node.$ && node.$ > max) {\n\t\t\t\t//\n\t\t\t\tmax = node.$;\n\t\t\t}\n\t\t};\n\t}\n}\n\nconst randomWord = (length = 0) => {\n\tlet s = '';\n\tfor (let i = 0; i < length; i++) {\n\t\ts += String.fromCharCode(Math.random() * 26 + 'a'.charCodeAt(0));\n\t}\n\treturn s;\n};\n\nlet trie = new Trie();\n\nfor (let i = 0; i < 1000; i++) {\n\ttrie.insert(randomWord(4));\n}\n\n// ____________________LR(0)______________________________\n\nconst parse = source => {\n\tlet stack = [];\n\t// debugger;\n\tfor (let c of source) {\n\t\tif (c === '(' || c === '[' || c === '{') stack.push(c);\n\n\t\tif (c === ')') {\n\t\t\tif (stack[stack.length - 1] === '(') stack.pop();\n\t\t\telse return false;\n\t\t}\n\n\t\tif (c === ']') {\n\t\t\tif (stack[stack.length - 1] === '[') stack.pop();\n\t\t\telse return false;\n\t\t}\n\n\t\tif (c === '}') {\n\t\t\tif (stack[stack.length - 1] === '{') stack.pop();\n\t\t\telse return false;\n\t\t}\n\t}\n\tif (stack.length === 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n// console.log(parse('(a)'), parse('(a'));\n\n// ----------------KMP---------------\n\n// Version_Classic\nconst find = (source, pattern) => {\n\tfor (let i = 0; i < source.length; i++) {\n\t\tlet matched = true;\n\t\tfor (let j = 0; j < source.length; j++) {\n\t\t\tif (source[i + j] !== pattern) {\n\t\t\t\tmatched = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (matched) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\n// console.log(find('abcxyz', 'xy')); -> true\n\n// Effective\nconst find2 = (source, pattern) => {\n\tlet table = new Array(pattern.length).fill(0);\n\n\tlet k = 0;\n\tfor (let j = 1; j < pattern.length; j++) {\n\t\tif (pattern[j] === pattern[k]) {\n\t\t\tk++;\n\t\t}\n\t\ttable[j] = k;\n\t}\n\tconsole.log(table);\n\n\tlet j = 0;\n\tfor (let i = 0; i < source.length; i++) {\n\t\tconsole.log(source[i], pattern[j], j);\n\t\tif (source[i] === pattern[j]) {\n\t\t\tj++;\n\t\t} else {\n\t\t\twhile (source[i] !== pattern[j] && j > 0) {\n\t\t\t\tj = table[j - 1];\n\t\t\t}\n\t\t\tif (source[i] === pattern[j]) {\n\t\t\t\tj++;\n\t\t\t} else {\n\t\t\t\tj = 0;\n\t\t\t}\n\t\t}\n\t\tif (j === pattern.length) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\nconsole.log(find2('abcabcabx', 'abcabx'));\n\n//------------------------------------------\nconst wildcard = (source, pattern) => {\n\tlet startCount = 0;\n\tfor (let i = 0; i < pattern.length; i++) {\n\t\tif (pattern[i] === '*') startCount++;\n\t}\n\tif (startCount === 0) {\n\t\tlet matched = true;\n\t\tfor (let i = 0; i < pattern.length; i++) {\n\t\t\tif (pattern[i] !== source[i] && pattern[i] !== '?') return false;\n\t\t}\n\t\treturn;\n\t}\n\n\tlet i = 0;\n\tlet j = 0;\n\n\tfor (let i = 0; pattern[i] !== '*'; i++) {\n\t\tif (pattern[i] !== source[i] && pattern[i] !== '?') return false;\n\t}\n\n\tlet lastIndex = i;\n\n\tfor (let p = 0; p < startCount - 1; p++) {\n\t\ti++;\n\t\tlet subPattern = '';\n\t\twhile (pattern[i] !== '*') {\n\t\t\tsubPattern += pattern[i];\n\t\t}\n\n\t\tlet reg = new RegExp(subPattern.replace(/\\?/g, '[\\\\s\\\\S]'));\n\t\treg.lastIndex = lastIndex;\n\n\t\tconsole.log(reg.exec(source));\n\n\t\tlastIndex = reg.lastIndex;\n\t}\n\n\tfor (let j = 0; j <= source.length - lastIndex && pattern[pattern.length - j] !== '*'; j--) {\n\t\tif (\n\t\t\tpattern[pattern.length - j] !== source[source.length - j] &&\n\t\t\tpattern[pattern[pattern.length - j]] !== '?'\n\t\t)\n\t\t\treturn false;\n\t}\n\treturn true;\n};\n\nwildcard('abcabcabx', 'a*b*?x*c');\n"],"names":[],"version":3,"file":"index.377278e2.js.map","sourceRoot":"/__parcel_source_root/"}